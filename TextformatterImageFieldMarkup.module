<?php

class TextformatterImageFieldMarkup extends Textformatter {

	public static function getModuleInfo() {
		return array(
			'title' => 'Image fields Markup', 
			'version' => 104, 
			'summary' => "Allows you to use image fields inside markup languages, notably, Markdown and Textile in Processwire text fields",
			'href' => 'https://processwire.com/talk/topic/9192-textformatter-image-fields-markup/',
		); 
	}

    public function format(&$str) {

        // do nothing if given string is empty
        if(empty($str)) return;
        
        // start a new DOMDocument with our content
	$dom = new DOMDocument();
        $dom->loadHTML(mb_convert_encoding($str, 'HTML-ENTITIES', 'UTF-8'));
        
        // find all images
        $images = $dom->getElementsByTagName('img');
        
        foreach ($images as $image) {
            
            
            // get needed attributes with DOMDocument
            $src = $image->getAttribute('src');
            $alt = $image->getAttribute('alt');
            
            // will be needed later inside a foreach, like this we do it only once
            $parent = $image->parentNode;
            
            // If image has a normal URL or path, leave it like it is
            if (strpos($src, "http://") !== false && strpos($src, "/")) {
                continue;
            } else {
                // otherwhise dive src, that should be in the form fieldName:position by the :
                $exploded = explode(":",$src);
                
                // the field name is the first element
                $field = $this->page->get($exploded[0]);
                
                // if this field doesn't exist continue
                if(!$field) continue;
                
                // the position is the second element
                $number = $exploded[1];
                
                // convert the position to 0 index
                $index = $number-1;
                
                // if image field is multiple
                if($field instanceof Pageimages){
                    
                    // if position is different from 0 
                    if($number){
                        
                        // get the image in that position of the field 
                        $thisimage = $field->eq($index);
                        
                        // set image url
                        $image->setAttribute('src', $thisimage->url);
                        // if alt is not defined manualy, get the image description
                        if(!$alt) $image->setAttribute('alt', $thisimage->description);
                        
                    // if position is 0, we will get all images 
                    } else {
                        // we are in the first image, there's no previous
                        $previmage = false;
                        
                        // Iterate images by the reverse the order
                        // because DOMdocument has insertBefore() but not insertAfter()
                        foreach($field->reverse() as $img) {
                            
                            if($previmage) {
                                // if there is a previous image we create a new one and insert it before it
                                $newimage = $dom->createElement('img');
                                $parent->insertBefore($newimage, $previmage);
                                
                            } else {
                                // if there isn't a previous image we simply use the original one
                                $newimage = $image;
                            }
                            
                            // set image url
                            $newimage->setAttribute('src', $img->url);
                            // if alt is not defined manualy, get the image description
                            if(!$alt) { 
                                $newimage->setAttribute('alt', $img->description);
                            } else {
                                $newimage->setAttribute('alt', $alt);
                            }
                            
                            // this image will be the previous in the next iteraction
                            $previmage = $newimage; 
                        }
                    }
                    
                // if image field is single just set the attributes
                } else if($field instanceof Pageimage){
                    
                    // set image url
                    $image->setAttribute('src', $src);
                    // if alt is not defined manualy, get the image description
                    if(!$alt) $image->setAttribute('alt', $alt);
                } 
            }
        }
        // return the our modified html
        $str = $dom->saveHTML($dom->getElementsByTagName('body')->item(0));
        $str = ltrim(rtrim($str,'</body>'),'<body>');
    }
}
